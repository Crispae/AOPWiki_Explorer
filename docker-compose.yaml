version: '3.7'
services:

  ## Webapp container
  frontend:
    container_name: frontend
    build:
      context: './frontend'
    ports:
      - "3000:3000"
    networks:
      - mynetwork

  ## Neo4j database container
  neo4j:
    image: neo4j:4.2.3-enterprise
    container_name: neo4j
    volumes:
      - $HOME/graph_data/my_data:/data
      - $HOME/graph_data/my_data:/var/lib/neo4j/import
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_AUTH=neo4j/1234
      - NEO4JLABS_PLUGINS=["apoc", "graph-data-science"]
      - apoc.import.file.enabled=true
      # - NEO4J_dbms_memory_pagecache_size=4G
      # - NEO4j_dbms_memory_heap_initial__size=4G
      # - NEO4J_dbms_memory_heap_max__size=8G
    networks:
      - mynetwork

  ### Jupyter notebook container
  jupyter:
    container_name: jupyter
    build:
      context: './jupyter'
    user: 1000:1000  # Change the user and group to match the container's permissions

    ports:
      - "8888:8888"
    links:
      - neo4j
    networks:
      - mynetwork


  ### backend container (natural language to cypher translation)
  backend:
    container_name: backend
    build:
      context: './backend'
    environment:
    ## udpate your openai key
      - OPENAI_API_KEY=""

      ## Neo4j environment variables
      - NEO4J_URL="bolt://neo4j:7687"
      - NEO4J_USERNAME="neo4j"
      - NEO4J_PASSWORD=1234
    networks:
      - mynetwork
    depends_on:
      - neo4j
    ports:
      - "3336:3336"
    links:
      - neo4j
      - frontend
      

## Configure network 
networks:
  mynetwork:
